@page
@model StudentCoursesModel
@using CourseManagement.Models
@{


}
<!DOCTYPE html>
<html lang="en">
<body>
    <!-- Header Start -->
    <div class="container-fluid bg-primary py-5 mb-5 page-header">
        <div class="container py-5">
            <div class="row justify-content-center">
                <div class="col-lg-10 text-center">
                    <h1 class="display-3 text-white animated slideInDown">Courses</h1>
                </div>
            </div>
        </div>
    </div>
    <!-- Header End -->
    <!-- Categories Start -->
    <div class="container-xxl py-5 category">
        <div class="container">
            <div class="text-center wow fadeInUp" data-wow-delay="0.1s">
                <h6 class="section-title bg-white text-center text-primary px-3">Courses</h6>
                <h1 class="mb-5">Search and Filter Courses</h1>
                <form method="get" asp-page-handler="Index" id="course-search-form">
                    <div class="row justify-content-center">
                        <div class="col-md-4 mb-3">
                            <input type="text" class="form-control" placeholder="Enter course name...." name="SearchText" value="@Model.SearchText">
                        </div>
                        <div class="col-md-3 mb-3">
                            <select class="form-select" name="EnrollmentFilter" asp-for="EnrollmentFilter">
                                <option value="">All Courses</option>
                                <option value="enrolled">Enrolled Courses</option>
                                <option value="not_enrolled">Not Enrolled Courses</option>
                            </select>
                        </div>
                        <div class="col-md-2 mb-3">
                            <button class="btn btn-primary w-100" type="submit">Search</button>
                        </div>
                    </div>
                </form>
            </div>
            @if (Model.PaginatedCourses != null && Model.PaginatedCourses.Any())
            {
                <div id="course-list" class="row g-4 justify-content-center">
                    @foreach (var course in Model.PaginatedCourses)
                    {
                        <div class="col-lg-4 col-md-6 wow fadeInUp" data-wow-delay="0.1s">
                            <div class="course-item bg-light">
                                <div class="position-relative overflow-hidden">
                                    <img class="img-fluid" src="@course.Image" alt="">

                                </div>

                                <div class="text-center p-4 pb-0">
                                    <h5 class="mb-4">@course.CourseName</h5>
                                    <div class="">
                                        @if (Model.EnrolledCourseIds.Contains(course.CourseId))
                                        {
                                            <a asp-page="./Lessons" asp-route-courseid="@course.CourseId" class="btn btn-secondary">Re-enroll</a>
                                        }
                                        else
                                        {
                                            <a asp-page="./Lessons" asp-route-courseid="@course.CourseId" class="btn btn-primary">Enroll</a>
                                        }
                                        @* <a asp-page="./Lessons" asp-route-courseid="@course.CourseId" class="btn btn-primary">Enroll</a> *@

                                    </div>
                                </div>

                                <div class="d-flex border-top">
                                    <small class="flex-fill text-center border-end py-2">
                                        <i class="fa fa-user-tie text-primary me-2"></i>
                                        @(course.Instructor != null ? $"{course.Instructor.FirstName} {course.Instructor.LastName}" : "No Instructor")
                                    </small>
                                    <small class="flex-fill text-center py-2"><i class="fa fa-user text-primary me-2"></i>@course.Enrollments.Count</small>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <!-- Pagination Controls -->
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center mt-4">
                        @if (Model.PaginatedCourses.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-page="./StudentCourses" asp-route-pageIndex="@(Model.PaginatedCourses.PageIndex - 1)" asp-route-searchText="@Model.SearchText" asp-route-enrollmentFilter="@Model.EnrollmentFilter">Previous</a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.PaginatedCourses.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PaginatedCourses.PageIndex ? "active" : "")">
                                <a class="page-link" asp-page="./StudentCourses" asp-route-pageIndex="@i" asp-route-searchText="@Model.SearchText" asp-route-enrollmentFilter="@Model.EnrollmentFilter">@i</a>
                            </li>
                        }

                        @if (Model.PaginatedCourses.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" asp-page="./StudentCourses" asp-route-pageIndex="@(Model.PaginatedCourses.PageIndex + 1)" asp-route-searchText="@Model.SearchText" asp-route-enrollmentFilter="@Model.EnrollmentFilter">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
            else
            {
                <p>No course found.</p>
            }
        </div>
    </div>
</body>
</html>