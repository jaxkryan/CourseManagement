@page
@model CourseManagement.Areas.Teacher.Pages.Courses.IndexModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Teacher/Pages/Shared/_TeacherLayout.cshtml";
}

<h1>Index</h1>
<div class="form-group">
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</div>
<form method="get" class="form-container">

    <div class="form-group">
        <input type="text" name="SearchString" value="@Model.SearchString" placeholder="Search..." class="form-control" />
    </div>
    <div class="date-container">
        <div class="form-group">
            <label for="startDate">Start Date:</label>
            <input type="date" name="StartDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")" class="form-control" />
        </div>
        <div class="form-group">
            <label for="endDate">End Date:</label>
            <input type="date" name="EndDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")" class="form-control" />
        </div>
    </div>
    <div class="form-group align-self-end">
        <input type="submit" value="Search" class="btn btn-secondary" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.PaginatedCourses[0].CourseName)</th>
            <th>@Html.DisplayNameFor(model => model.PaginatedCourses[0].Description)</th>
            <th>@Html.DisplayNameFor(model => model.PaginatedCourses[0].Instructor)</th>
            <th>@Html.DisplayNameFor(model => model.PaginatedCourses[0].CreatedAt)</th>
            <th>@Html.DisplayNameFor(model => model.PaginatedCourses[0].Image)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PaginatedCourses)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CourseName)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@($"{item.Instructor.FirstName} {item.Instructor.LastName}")</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                <td>
                    <img src="@item.Image" alt="Image" style="max-width: 100px; height: auto;" />
                </td>
                <td>
                    <a asp-page="Edit" asp-route-id="@item.CourseId" class="btn btn-info btn-sm">Edit</a>
                    <a asp-page="Details" asp-route-id="@item.CourseId" class="btn btn-secondary btn-sm">Details</a>
                    <a asp-page="Delete" asp-route-id="@item.CourseId" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(Model.PaginatedCourses.HasPreviousPage ? "" : "disabled")">
            <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PaginatedCourses.PageIndex - 1)" asp-route-searchString="@Model.SearchString" asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")" asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")">Previous</a>
        </li>
        @for (var i = 1; i <= Model.PaginatedCourses.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PaginatedCourses.PageIndex ? "active" : "")">
                <a class="page-link" asp-page="./Index" asp-route-pageIndex="@i" asp-route-searchString="@Model.SearchString" asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")" asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")">@i</a>
            </li>
        }
        <li class="page-item @(Model.PaginatedCourses.HasNextPage ? "" : "disabled")">
            <a class="page-link" asp-page="./Index" asp-route-pageIndex="@(Model.PaginatedCourses.PageIndex + 1)" asp-route-searchString="@Model.SearchString" asp-route-startDate="@Model.StartDate?.ToString("yyyy-MM-dd")" asp-route-endDate="@Model.EndDate?.ToString("yyyy-MM-dd")">Next</a>
        </li>
    </ul>
</nav>

<style>
    .form-container {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-end;
        gap: 10px;
    }

    .form-group {
        flex: 0 0 auto;
    }

    .date-container {
        display: flex;
        gap: 10px;
    }

    .form-control, .btn {
        height: 38px;
    }

    .btn-sm {
        width: 70px; /* Adjust the width as needed */
        margin-right: 5px; /* Optional: add some space between buttons */
    }
</style>
